.row
  .cc-col.cc-col-6
    .location-title
      - if @model.get('city') == "shanghai"
        = __("Shanghai Outdoor")
      - else if @model.get('city') == "beijing"
        = __("Beijing Outdoor")
      - else
        = __("Indoor Air")
  .cc-col.cc-col-6
    - if @model.get('usdata')
      - pm2p5 = parseInt(@model.get('pm2p5'))
    - else
      - pm2p5 = parseInt(parseFloat(@model.get('pm2p5')))
    span.pm2p5-badge
    .reading.big-reading class="#{AirAware.assessAirClass(pm2p5)}"
      .reading-inner
        span.pm2p5.value
        .reading-label
          = __("PM 2.5")
        .reading-units
          = "(μg/m³)"
- if @model.get('temperature') || @model.get('humidity') || @model.get('tvoc') || @model.get('hcho') || @model.get('co2')
  .row
    .readings-secondrow-container
      .cc-col.cc-col-20p
        .reading
          .reading-inner
            span.temperature.value
            .reading-label
              = __("Temp")
            .reading-units
              = "(°C)"
      .cc-col.cc-col-20p
        span.humidity-badge
        .reading class="#{AirAware.assessHumidityClass(@model.get('humidity'))}"
          .reading-inner
            span.humidity.value
            .reading-label
              = __("Humidity")
            .reading-units
              = "(%)"
      .cc-col.cc-col-20p
        span.tvoc-badge
        .reading class="#{AirAware.assessTvocClass(parseFloat(@model.get('tvoc')))}"
          .reading-inner
            span.tvoc.value
            .reading-label
              = "TVOC"
            .reading-units
              = "(mg/m³)"
      .cc-col.cc-col-20p
        span.hcho-badge
        .reading
          .reading-inner
            span.hcho.value
            .reading-label
              = __("HCHO")
            .reading-units
              = "(mg/m³)"
      .cc-col.cc-col-20p
        span.co2-badge
        .reading class="#{AirAware.assessCo2Class(@model.get('co2'))}"
          .reading-inner
            span.co2.value
            .reading-label
              = __("CO2")
            .reading-units
              = "(ppmv)"
.col-sm-12
  span.readingtime.pull-right.timestamp
